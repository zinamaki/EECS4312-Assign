(Limits_Alarm
 (high_alarm_req_TCC1 0
  (high_alarm_req_TCC1-1 nil 3685800394
   ("" (cond-disjoint-tcc) nil nil)
   ((real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (DTIME type-eq-decl nil Time nil)
    (delta formal-const-decl "posreal" Limits_Alarm nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (>= const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (env_1 const-decl "bool" Limits_Alarm nil))
   nil))
 (high_alarm_req_TCC2 0
  (high_alarm_req_TCC2-1 nil 3685800394
   ("" (cond-coverage-tcc) nil nil)
   ((real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (DTIME type-eq-decl nil Time nil)
    (delta formal-const-decl "posreal" Limits_Alarm nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (>= const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (env_1 const-decl "bool" Limits_Alarm nil))
   nil))
 (high_alarm_req_TCC3 0
  (high_alarm_req_TCC3-1 nil 3685800394
   ("" (cond-disjoint-tcc) nil nil)
   ((real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (DTIME type-eq-decl nil Time nil)
    (delta formal-const-decl "posreal" Limits_Alarm nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (>= const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (env_1 const-decl "bool" Limits_Alarm nil))
   nil))
 (high_alarm_req_TCC4 0
  (high_alarm_req_TCC4-1 nil 3685800394
   ("" (cond-coverage-tcc) nil nil)
   ((real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (DTIME type-eq-decl nil Time nil)
    (delta formal-const-decl "posreal" Limits_Alarm nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (>= const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (env_1 const-decl "bool" Limits_Alarm nil))
   nil))
 (high_alarm_req_TCC5 0
  (high_alarm_req_TCC5-1 nil 3685907691
   ("" (cond-coverage-tcc) nil nil)
   ((real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (DTIME type-eq-decl nil Time nil)
    (delta formal-const-decl "posreal" Limits_Alarm nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (>= const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (env_1 const-decl "bool" Limits_Alarm nil))
   nil))
 (low_alarm_req_TCC1 0
  (low_alarm_req_TCC1-1 nil 3685800394 ("" (cond-disjoint-tcc) nil nil)
   ((real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (DTIME type-eq-decl nil Time nil)
    (delta formal-const-decl "posreal" Limits_Alarm nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (>= const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (env_1 const-decl "bool" Limits_Alarm nil))
   nil))
 (low_alarm_req_TCC2 0
  (low_alarm_req_TCC2-1 nil 3685800394 ("" (cond-coverage-tcc) nil nil)
   ((real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (DTIME type-eq-decl nil Time nil)
    (delta formal-const-decl "posreal" Limits_Alarm nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (>= const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (env_1 const-decl "bool" Limits_Alarm nil))
   nil))
 (low_alarm_req_TCC3 0
  (low_alarm_req_TCC3-1 nil 3685907691 ("" (cond-coverage-tcc) nil nil)
   ((real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (DTIME type-eq-decl nil Time nil)
    (delta formal-const-decl "posreal" Limits_Alarm nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (>= const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (env_1 const-decl "bool" Limits_Alarm nil))
   nil))
 (correct_limits_alarm_fbd 0
  (correct_limits_alarm_fbd-1 nil 3685801171
   ("" (skeep)
    (("" (expand "env_1")
      (("" (expand "limits_alarm_fbd")
        (("" (expand "limits_alarm_req")
          (("" (skeep)
            (("" (expand "hysteresis_req")
              (("" (expand "gte_one")
                (("" (expand "minus")
                  (("" (expand "plus")
                    (("" (expand "divide")
                      (("" (prop)
                        (("1" (expand "high_alarm_req")
                          (("1" (flatten)
                            (("1" (expand "env_1")
                              (("1"
                                (skeep)
                                (("1"
                                  (prop)
                                  (("1"
                                    (assert)
                                    (("1"
                                      (inst -2 "i")
                                      (("1"
                                        (inst -3 "i")
                                        (("1"
                                          (inst -4 "i")
                                          (("1"
                                            (inst -6 "i")
                                            (("1"
                                              (inst -7 "i")
                                              (("1"
                                                (inst -8 "i")
                                                (("1"
                                                  (inst -9 "i")
                                                  (("1"
                                                    (prop)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (inst -2 "i")
                                    (("2"
                                      (inst -3 "i")
                                      (("2"
                                        (inst -4 "i")
                                        (("2"
                                          (inst -6 "i")
                                          (("2"
                                            (inst -7 "i")
                                            (("2"
                                              (inst -8 "i")
                                              (("2"
                                                (inst -9 "i")
                                                (("2"
                                                  (prop)
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("3"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("4"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("5"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("6"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("3"
                                    (inst -2 "i")
                                    (("3"
                                      (inst -3 "i")
                                      (("3"
                                        (inst -4 "i")
                                        (("3"
                                          (inst -6 "i")
                                          (("3"
                                            (inst -7 "i")
                                            (("3"
                                              (inst -8 "i")
                                              (("3"
                                                (inst -9 "i")
                                                (("3"
                                                  (prop)
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("3"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("4"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("5"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("6"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("4"
                                    (inst -1 "i")
                                    (("4"
                                      (inst -2 "i")
                                      (("4"
                                        (inst -3 "i")
                                        (("4"
                                          (inst -5 "i")
                                          (("4"
                                            (inst -6 "i")
                                            (("4"
                                              (inst -7 "i")
                                              (("4"
                                                (inst -8 "i")
                                                (("4"
                                                  (prop)
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("3"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("4"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("5"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("6"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (expand "low_alarm_req")
                          (("2" (flatten)
                            (("2" (skeep)
                              (("2"
                                (prop)
                                (("1"
                                  (expand "env_1")
                                  (("1"
                                    (inst -2 "i")
                                    (("1"
                                      (inst -3 "i")
                                      (("1"
                                        (inst -4 "i")
                                        (("1"
                                          (inst -6 "i")
                                          (("1"
                                            (inst -7 "i")
                                            (("1"
                                              (inst -8 "i")
                                              (("1"
                                                (inst -9 "i")
                                                (("1" (prop) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (inst -3 "i")
                                  (("2"
                                    (inst -4 "i")
                                    (("2"
                                      (inst -6 "i")
                                      (("2"
                                        (inst -7 "i")
                                        (("2"
                                          (inst -8 "i")
                                          (("2"
                                            (inst -9 "i")
                                            (("2"
                                              (prop)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (inst -7 "i")
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2" (assert) nil nil)
                                               ("3"
                                                (assert)
                                                (("3"
                                                  (inst -6 "i")
                                                  (("3"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil)
                                               ("4" (assert) nil nil)
                                               ("5"
                                                (inst -7 "i")
                                                (("5"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil)
                                               ("6"
                                                (inst -6 "i")
                                                (("6"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("3"
                                  (inst -3 "i")
                                  (("3"
                                    (inst -4 "i")
                                    (("3"
                                      (inst -6 "i")
                                      (("3"
                                        (inst -7 "i")
                                        (("3"
                                          (inst -8 "i")
                                          (("3"
                                            (inst -9 "i")
                                            (("3"
                                              (inst -5 "i")
                                              (("3"
                                                (prop)
                                                (("1" (assert) nil nil)
                                                 ("2" (assert) nil nil)
                                                 ("3" (assert) nil nil)
                                                 ("4" (assert) nil nil)
                                                 ("5" (assert) nil nil)
                                                 ("6"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("4"
                                  (inst -2 "i")
                                  (("4"
                                    (inst -3 "i")
                                    (("4"
                                      (inst -4 "i")
                                      (("4"
                                        (inst -5 "i")
                                        (("4"
                                          (inst -6 "i")
                                          (("4"
                                            (inst -7 "i")
                                            (("4"
                                              (inst -8 "i")
                                              (("4"
                                                (prop)
                                                (("1" (assert) nil nil)
                                                 ("2" (assert) nil nil)
                                                 ("3" (assert) nil nil)
                                                 ("4" (assert) nil nil)
                                                 ("5" (assert) nil nil)
                                                 ("6"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("3" (expand "high_alarm_req")
                          (("3" (flatten)
                            (("3" (skeep)
                              (("3"
                                (expand "env")
                                (("3"
                                  (prop)
                                  (("1"
                                    (inst -3 "i")
                                    (("1"
                                      (inst -4 "i")
                                      (("1"
                                        (inst -5 "i")
                                        (("1"
                                          (inst -6 "i")
                                          (("1"
                                            (inst -7 "i")
                                            (("1"
                                              (inst -8 "i")
                                              (("1" (prop) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (assert)
                                    (("2"
                                      (inst -3 "i")
                                      (("2"
                                        (inst -4 "i")
                                        (("2"
                                          (inst -5 "i")
                                          (("2"
                                            (inst -6 "i")
                                            (("2"
                                              (inst -7 "i")
                                              (("2"
                                                (inst -8 "i")
                                                (("2"
                                                  (prop)
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("3"
                                    (inst -3 "i")
                                    (("3"
                                      (inst -4 "i")
                                      (("3"
                                        (inst -5 "i")
                                        (("3"
                                          (inst -6 "i")
                                          (("3"
                                            (inst -7 "i")
                                            (("3"
                                              (inst -8 "i")
                                              (("3"
                                                (prop)
                                                (("1" (assert) nil nil)
                                                 ("2"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("4"
                                    (inst -2 "i")
                                    (("4"
                                      (inst -3 "i")
                                      (("4"
                                        (inst -4 "i")
                                        (("4"
                                          (inst -5 "i")
                                          (("4"
                                            (inst -6 "i")
                                            (("4"
                                              (inst -7 "i")
                                              (("4"
                                                (prop)
                                                (("1" (assert) nil nil)
                                                 ("2"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("4" (expand "low_alarm_req")
                          (("4" (flatten)
                            (("4" (expand "env")
                              (("4"
                                (skeep)
                                (("4"
                                  (skolem 2 "k")
                                  (("4"
                                    (prop)
                                    (("1"
                                      (inst -3 "k")
                                      (("1"
                                        (inst -4 "k")
                                        (("1"
                                          (inst -5 "k")
                                          (("1"
                                            (inst -6 "k")
                                            (("1"
                                              (inst -7 "k")
                                              (("1"
                                                (inst -8 "k")
                                                (("1"
                                                  (prop)
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("3"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("4"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (inst -3 "k")
                                      (("2"
                                        (inst -4 "k")
                                        (("2"
                                          (inst -5 "k")
                                          (("2"
                                            (inst -6 "k")
                                            (("2"
                                              (inst -7 "k")
                                              (("2"
                                                (inst -8 "k")
                                                (("2"
                                                  (prop)
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("3"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("4"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("3"
                                      (inst -3 "k")
                                      (("3"
                                        (inst -4 "k")
                                        (("3"
                                          (inst -5 "k")
                                          (("3"
                                            (inst -6 "k")
                                            (("3"
                                              (inst -7 "k")
                                              (("3"
                                                (inst -8 "k")
                                                (("3"
                                                  (prop)
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("3"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("4"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("4"
                                      (inst -2 "k")
                                      (("4"
                                        (inst -3 "k")
                                        (("4"
                                          (inst -5 "k")
                                          (("4"
                                            (inst -4 "k")
                                            (("4"
                                              (inst -6 "k")
                                              (("4"
                                                (inst -7 "k")
                                                (("4"
                                                  (prop)
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("3"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("4"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("5" (expand "high_alarm_req")
                          (("5" (flatten)
                            (("5" (expand "env")
                              (("5"
                                (skeep)
                                (("5"
                                  (prop)
                                  (("1"
                                    (skolem 2 "k")
                                    (("1"
                                      (inst -3 "k")
                                      (("1"
                                        (inst -4 "k")
                                        (("1"
                                          (inst -5 "k")
                                          (("1"
                                            (inst -6 "k")
                                            (("1"
                                              (inst -7 "k")
                                              (("1"
                                                (inst -8 "k")
                                                (("1"
                                                  (prop)
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("3"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("4"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (skolem 3 "k")
                                    (("2"
                                      (inst -3 "k")
                                      (("2"
                                        (inst -4 "k")
                                        (("2"
                                          (inst -5 "k")
                                          (("2"
                                            (inst -6 "k")
                                            (("2"
                                              (inst -7 "k")
                                              (("2"
                                                (inst -8 "k")
                                                (("2"
                                                  (prop)
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("3"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("4"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("3"
                                    (skolem 4 "k")
                                    (("3"
                                      (inst -3 "k")
                                      (("3"
                                        (inst -4 "k")
                                        (("3"
                                          (inst -5 "k")
                                          (("3"
                                            (inst -7 "k")
                                            (("3"
                                              (inst -8 "k")
                                              (("3"
                                                (inst -6 "k")
                                                (("3"
                                                  (prop)
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("3"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("4"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("4"
                                    (skolem 5 "k")
                                    (("4"
                                      (inst -2 "k")
                                      (("4"
                                        (inst -3 "k")
                                        (("4"
                                          (inst -4 "k")
                                          (("4"
                                            (inst -5 "k")
                                            (("4"
                                              (inst -6 "k")
                                              (("4"
                                                (inst -7 "k")
                                                (("4"
                                                  (prop)
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("3"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("4"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("6" (expand "low_alarm_req")
                          (("6" (flatten)
                            (("6" (skeep)
                              (("6"
                                (prop)
                                (("1"
                                  (expand "env")
                                  (("1"
                                    (skolem 2 "k")
                                    (("1"
                                      (inst -3 "k")
                                      (("1"
                                        (inst -4 "k")
                                        (("1"
                                          (inst -5 "k")
                                          (("1"
                                            (inst -6 "k")
                                            (("1"
                                              (inst -7 "k")
                                              (("1"
                                                (inst -8 "k")
                                                (("1"
                                                  (prop)
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("3"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (expand "env")
                                  (("2"
                                    (skolem 3 "k")
                                    (("2"
                                      (inst -3 "k")
                                      (("2"
                                        (inst -4 "k")
                                        (("2"
                                          (inst -5 "k")
                                          (("2"
                                            (inst -6 "k")
                                            (("2"
                                              (inst -7 "k")
                                              (("2"
                                                (inst -8 "k")
                                                (("2"
                                                  (prop)
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("3"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("4"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("3"
                                  (expand "env")
                                  (("3"
                                    (skolem 4 "k")
                                    (("3"
                                      (inst -3 "k")
                                      (("3"
                                        (inst -4 "k")
                                        (("3"
                                          (inst -5 "k")
                                          (("3"
                                            (inst -6 "k")
                                            (("3"
                                              (inst -7 "k")
                                              (("3"
                                                (inst -8 "k")
                                                (("3"
                                                  (prop)
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("3"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("4"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("4"
                                  (expand "env")
                                  (("4"
                                    (skolem 5 "k")
                                    (("4"
                                      (inst -2 "k")
                                      (("4"
                                        (inst -3 "k")
                                        (("4"
                                          (inst -4 "k")
                                          (("4"
                                            (inst -5 "k")
                                            (("4"
                                              (inst -6 "k")
                                              (("4"
                                                (inst -7 "k")
                                                (("4"
                                                  (prop)
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("3"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("4"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("7" (expand "high_alarm_req")
                          (("7" (flatten)
                            (("7" (skeep)
                              (("7"
                                (prop)
                                (("1"
                                  (expand "env")
                                  (("1"
                                    (skolem 2 "k")
                                    (("1"
                                      (inst -3 "k")
                                      (("1"
                                        (inst -4 "k")
                                        (("1"
                                          (inst -5 "k")
                                          (("1"
                                            (inst -6 "k")
                                            (("1"
                                              (inst -7 "k")
                                              (("1" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (expand "env")
                                  (("2"
                                    (skolem 3 "k")
                                    (("2"
                                      (inst -4 "k")
                                      (("2"
                                        (inst -3 "k")
                                        (("2"
                                          (inst -5 "k")
                                          (("2"
                                            (inst -6 "k")
                                            (("2"
                                              (inst -7 "k")
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("3"
                                  (expand "env")
                                  (("3"
                                    (skolem 4 "k")
                                    (("3"
                                      (inst -3 "k")
                                      (("3"
                                        (inst -4 "k")
                                        (("3"
                                          (inst -5 "k")
                                          (("3"
                                            (inst -6 "k")
                                            (("3"
                                              (inst -7 "k")
                                              (("3" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("4"
                                  (expand "env")
                                  (("4"
                                    (skolem 5 "k")
                                    (("4"
                                      (inst -2 "k")
                                      (("4"
                                        (inst -3 "k")
                                        (("4"
                                          (inst -4 "k")
                                          (("4"
                                            (inst -5 "k")
                                            (("4"
                                              (inst -6 "k")
                                              (("4" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("8" (expand "low_alarm_req")
                          (("8" (flatten)
                            (("8" (skeep)
                              (("8"
                                (prop)
                                (("1"
                                  (expand "env")
                                  (("1"
                                    (skolem 2 "k")
                                    (("1"
                                      (inst -3 "k")
                                      (("1"
                                        (inst -4 "k")
                                        (("1"
                                          (inst -5 "k")
                                          (("1"
                                            (inst -6 "k")
                                            (("1"
                                              (inst -7 "k")
                                              (("1" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (expand "env")
                                  (("2"
                                    (skolem 3 "k")
                                    (("2"
                                      (inst -3 "k")
                                      (("2"
                                        (inst -4 "k")
                                        (("2"
                                          (inst -5 "k")
                                          (("2"
                                            (inst -6 "k")
                                            (("2"
                                              (inst -7 "k")
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("3"
                                  (expand "env")
                                  (("3"
                                    (skolem 4 "k")
                                    (("3"
                                      (inst -3 "k")
                                      (("3"
                                        (inst -4 "k")
                                        (("3"
                                          (inst -5 "k")
                                          (("3"
                                            (inst -6 "k")
                                            (("3"
                                              (inst -7 "k")
                                              (("3" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("4"
                                  (expand "env")
                                  (("4"
                                    (skolem 5 "k")
                                    (("4"
                                      (inst -2 "k")
                                      (("4"
                                        (inst -3 "k")
                                        (("4"
                                          (inst -4 "k")
                                          (("4"
                                            (inst -5 "k")
                                            (("4"
                                              (inst -6 "k")
                                              (("4" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((env_1 const-decl "bool" Limits_Alarm nil)
    (limits_alarm_req const-decl "bool" Limits_Alarm nil)
    (hysteresis_req const-decl "bool" Hysteresis nil)
    (minus const-decl "bool" Limits_Alarm nil)
    (divide const-decl "bool" Limits_Alarm nil)
    (env const-decl "bool" Hysteresis nil)
    (low_alarm_req const-decl "bool" Limits_Alarm nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (high_alarm_req const-decl "bool" Limits_Alarm nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (delta formal-const-decl "posreal" Limits_Alarm nil)
    (DTIME type-eq-decl nil Time nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (plus const-decl "bool" Limits_Alarm nil)
    (gte_one const-decl "bool" Limits_Alarm nil)
    (limits_alarm_fbd const-decl "bool" Limits_Alarm nil))
   shostak))
 (req_entails_inv 0
  (req_entails_inv-1 nil 3685800436
   ("" (skeep)
    (("" (expand "limits_alarm_req")
      (("" (expand "no_simultaneous_alarms")
        (("" (expand "env_1")
          (("" (expand "env_2")
            (("" (flatten)
              (("" (skeep)
                (("" (expand "high_alarm_req")
                  (("" (expand "low_alarm_req")
                    (("" (expand "gte_one")
                      (("" (prop)
                        (("1" (inst -3 "i")
                          (("1" (inst -4 "i")
                            (("1" (inst -5 "i")
                              (("1"
                                (assert)
                                (("1"
                                  (inst -1 "i")
                                  (("1"
                                    (inst -2 "i")
                                    (("1"
                                      (prop)
                                      (("1" (assert) nil nil)
                                       ("2" (assert) nil nil)
                                       ("3" (assert) nil nil)
                                       ("4" (assert) nil nil)
                                       ("5" (assert) nil nil)
                                       ("6" (assert) nil nil)
                                       ("7" (assert) nil nil)
                                       ("8" (assert) nil nil)
                                       ("9" (assert) nil nil)
                                       ("10" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (assert)
                          (("2" (expand "env_1")
                            (("2" (propax) nil nil)) nil))
                          nil)
                         ("3" (expand "env_1") (("3" (propax) nil nil))
                          nil)
                         ("4" (expand "env_1") (("4" (propax) nil nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((limits_alarm_req const-decl "bool" Limits_Alarm nil)
    (env_1 const-decl "bool" Limits_Alarm nil)
    (high_alarm_req const-decl "bool" Limits_Alarm nil)
    (gte_one const-decl "bool" Limits_Alarm nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (delta formal-const-decl "posreal" Limits_Alarm nil)
    (DTIME type-eq-decl nil Time nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (low_alarm_req const-decl "bool" Limits_Alarm nil)
    (env_2 const-decl "bool" Limits_Alarm nil)
    (no_simultaneous_alarms const-decl "bool" Limits_Alarm nil))
   shostak))
 (limits_alarm_req2_TCC1 0
  (limits_alarm_req2_TCC1-1 nil 3685800394
   ("" (cond-disjoint-tcc) nil nil)
   ((real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (DTIME type-eq-decl nil Time nil)
    (delta formal-const-decl "posreal" Limits_Alarm nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (>= const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (env_1 const-decl "bool" Limits_Alarm nil)
    (env_2 const-decl "bool" Limits_Alarm nil))
   nil))
 (limits_alarm_req2_TCC2 0
  (limits_alarm_req2_TCC2-1 nil 3685800394
   ("" (cond-coverage-tcc) nil nil)
   ((real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (DTIME type-eq-decl nil Time nil)
    (delta formal-const-decl "posreal" Limits_Alarm nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (>= const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (env_1 const-decl "bool" Limits_Alarm nil)
    (env_2 const-decl "bool" Limits_Alarm nil))
   nil))
 (limits_alarm_fbd_pre_TCC1 0
  (limits_alarm_fbd_pre_TCC1-1 nil 3685800394
   ("" (subtype-tcc) nil nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (DTIME type-eq-decl nil Time nil)
    (env_1 const-decl "bool" Limits_Alarm nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (plus const-decl "bool" Limits_Alarm nil)
    (minus const-decl "bool" Limits_Alarm nil)
    (divide const-decl "bool" Limits_Alarm nil)
    (delta formal-const-decl "posreal" Limits_Alarm nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (env const-decl "bool" Hysteresis nil))
   nil))
 (limits_alarm_fbd_pre_TCC2 0
  (limits_alarm_fbd_pre_TCC2-1 nil 3685800394
   ("" (skeep)
    (("" (expand "env")
      (("" (expand "hysteresis_req_pre")
        (("" (expand "plus")
          (("" (expand "minus")
            (("" (expand "divide")
              (("" (skeep)
                (("" (inst -1 "i")
                  (("" (inst -2 "i")
                    (("" (inst -3 "i")
                      (("" (inst -4 "i")
                        (("" (prop)
                          (("1" (typepred "p")
                            (("1" (expand "env_1")
                              (("1"
                                (inst?)
                                (("1" (assert) nil nil))
                                nil))
                              nil))
                            nil)
                           ("2" (assert)
                            (("2" (typepred "p")
                              (("2"
                                (expand "env_1")
                                (("2"
                                  (inst?)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("3" (typepred "p")
                            (("3" (expand "env_1")
                              (("3"
                                (inst?)
                                (("3" (assert) nil nil))
                                nil))
                              nil))
                            nil)
                           ("4" (typepred "p")
                            (("4" (expand "env_1")
                              (("4"
                                (inst?)
                                (("4" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((env const-decl "bool" Hysteresis nil)
    (plus const-decl "bool" Limits_Alarm nil)
    (divide const-decl "bool" Limits_Alarm nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (delta formal-const-decl "posreal" Limits_Alarm nil)
    (DTIME type-eq-decl nil Time nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (env_1 const-decl "bool" Limits_Alarm nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (minus const-decl "bool" Limits_Alarm nil)
    (hysteresis_req_pre const-decl "bool" Hysteresis nil))
   nil)))


